import{_ as e,c as t,o as a,a2 as r}from"./chunks/framework.DC83J3Ln.js";const f=JSON.parse('{"title":"Getting Started","description":"","frontmatter":{},"headers":[],"relativePath":"getting-started/index.md","filePath":"getting-started/index.md","lastUpdated":1713652950000}'),o={name:"getting-started/index.md"},i=r('<h1 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">â€‹</a></h1><p><code>Piral.Blazor</code> exists in multiple forms. Right now, we have:</p><ul><li><code>Piral.Blazor.Core</code>, which is made to be consumed in a JavaScript / SPA created with the <a href="https://docs.piral.io" target="_blank" rel="noreferrer">Piral</a> framework</li><li><code>Piral.Blazor.Orchestrator</code>, which is made to be consumed in an ASP.NET Core web application to enable server-side micro frontends</li></ul><p>While both are fundamentally different, they share the same goals and have an overlapping development philosophy.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p><code>Piral.Blazor.Core</code> is never directly referenced, you&#39;d rather install the <a href="https://www.npmjs.com/package/blazor" target="_blank" rel="noreferrer"><code>blazor</code></a> npm package.</p></div>',5),n=[i];function d(s,l,c,p,h,_){return a(),t("div",null,n)}const g=e(o,[["render",d]]);export{f as __pageData,g as default};
